# Nginx 云端 API 配置
# 适用于使用云端 TTS 服务的部署

upstream backend_api {
    server backend:3000;
    keepalive 32;
}

upstream frontend_app {
    server frontend:5173;
    keepalive 32;
}

upstream tts_proxy {
    server tts-proxy:8001;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;

    # 设置超时时间
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # 设置缓冲区
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # 前端应用
    location / {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 支持 WebSocket (Vite HMR)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 后端 API
    location /api/ {
        proxy_pass http://backend_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 支持 WebSocket (Socket.io)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Socket.io 专用路径
    location /socket.io/ {
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # TTS 服务代理 (云端 API)
    location /cosyvoice/ {
        proxy_pass http://tts_proxy/cosyvoice/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /gpt-sovits/ {
        proxy_pass http://tts_proxy/gpt-sovits/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 健康检查端点
    location /health {
        access_log off;

        # 后端服务健康检查
        location = /health/backend {
            proxy_pass http://backend_api/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }

        # TTS 代理服务健康检查
        location = /health/tts {
            proxy_pass http://tts_proxy/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }

        # 综合健康检查
        location = /health/all {
            return 200 '{"status": "ok", "services": {"frontend": "frontend:5173", "backend": "backend:3000", "tts-proxy": "tts-proxy:8001"}, "cloud_apis": {"cosyvoice": "configured", "gpt-sovits": "configured"}, "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }

    # API 文档重定向
    location /docs {
        return 301 /api/docs;
    }

    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        return 404 '{"error": "Service not found", "available_services": ["/api", "/cosyvoice", "/gpt-sovits", "/health"]}';
        add_header Content-Type application/json;
    }

    location = /50x.html {
        return 500 '{"error": "Internal server error", "message": "Please check service logs"}';
        add_header Content-Type application/json;
    }
}
